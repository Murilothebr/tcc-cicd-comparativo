stages:
  - build_test
  - docker

variables:
  IMAGE_NAME: $IMAGE_NAME
  SOLUTION_PATH: "src/Api.sln"
  DOCKER_DRIVER: overlay2
  DOCKER_HOST: tcp://docker:2375
  DOCKER_TLS_CERTDIR: ""

default:
  interruptible: true
  tags: []

resource_group: "ci-$CI_COMMIT_REF_NAME"

build_test:
  stage: build_test
  image: mcr.microsoft.com/dotnet/sdk:8.0
  cache:
    key: "nuget-${CI_COMMIT_REF_SLUG}"
    paths:
      - .nuget/packages
  variables:
    NUGET_PACKAGES: "$CI_PROJECT_DIR/.nuget/packages"
  script:
    - dotnet --info
    - dotnet restore "$SOLUTION_PATH"
    - dotnet build "$SOLUTION_PATH" --configuration Release --no-restore
    - dotnet test "$SOLUTION_PATH" --configuration Release --no-build --logger "trx;LogFileName=test-results.trx"
  artifacts:
    when: always
    expire_in: 7 days
    paths:
      - "**/*.trx"

docker_build_scan_push:
  stage: docker
  image: docker:24
  services:
    - name: docker:24-dind
      alias: docker
  needs: ["build_test"]
  variables:
    DOCKER_BUILDKIT: "1"
  before_script:
    - echo "$DOCKERHUB_TOKEN" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
  script:
    # Build com base atualizada
    - docker build --pull -t "$IMAGE_NAME:$CI_COMMIT_SHA" .
    # Trivy (scan local, ignora CVEs sem fix e falha em HIGH/CRITICAL)
    - docker run --rm
      -e DOCKER_HOST="$DOCKER_HOST"
      -e DOCKER_TLS_CERTDIR="$DOCKER_TLS_CERTDIR"
      aquasec/trivy:0.54.1
      image --severity CRITICAL,HIGH --ignore-unfixed --exit-code 1 "$IMAGE_NAME:$CI_COMMIT_SHA"
    # Push por SHA
    - docker push "$IMAGE_NAME:$CI_COMMIT_SHA"
    # latest apenas na main
    - |
      if [ "$CI_COMMIT_BRANCH" = "main" ]; then
        docker tag "$IMAGE_NAME:$CI_COMMIT_SHA" "$IMAGE_NAME:latest"
        docker push "$IMAGE_NAME:latest"
      fi
  rules:
    - if: "$CI_COMMIT_BRANCH"
